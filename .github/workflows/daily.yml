name: daily

on:
  schedule:
    # 06:00 UTC ≈ 09:00 EAT (Mon–Fri)
    - cron: "0 3 * * *"
  workflow_dispatch:
    inputs:
      run_immediately:
        description: "Run motivation_runner.py now"
        required: false
        type: boolean
        default: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Recreate runner_config.json from runner_public.json
        env:
          SESSION_ID: ${{ secrets.SESSION_ID }}
        run: |
          if [ -z "$SESSION_ID" ]; then
            echo "SESSION_ID secret is missing" >&2
            exit 1
          fi
          if [ ! -f runner_public.json ]; then
            echo "runner_public.json is missing from the repo" >&2
            exit 1
          fi
          python - <<'PY'
import json
with open('runner_public.json','r', encoding='utf-8') as f:
    pub = json.load(f)
cfg = {
    "account_id": int(pub["account_id"]),
    "project_id": int(pub["project_id"]),
    "parent_message_id": int(pub["parent_message_id"]),
    "cc_ids": pub.get("cc_ids", [])
}
with open('runner_config.json','w', encoding='utf-8') as f:
    json.dump(cfg, f)
print("✅ runner_config.json written")
PY

      - name: Recreate access token json from secret (base64)
        env:
          SESSION_ID: ${{ secrets.SESSION_ID }}
          ACCESS_TOKEN_JSON_B64: ${{ secrets.ACCESS_TOKEN_JSON_B64 }}
        run: |
          if [ -z "$SESSION_ID" ] || [ -z "$ACCESS_TOKEN_JSON_B64" ]; then
            echo "SESSION_ID or ACCESS_TOKEN_JSON_B64 secret is missing" >&2
            exit 1
          fi
          echo "$ACCESS_TOKEN_JSON_B64" | base64 -d > access_token_${SESSION_ID}.json
          echo "✅ access_token_${SESSION_ID}.json restored"

      - name: Preflight check
        env:
          SESSION_ID: ${{ secrets.SESSION_ID }}
        run: |
          test -f "runner_config.json" || (echo "runner_config.json missing" >&2; exit 1)
          test -f "access_token_${SESSION_ID}.json" || (echo "access token file missing" >&2; exit 1)
          echo "✅ Preflight OK"

      - name: Run motivation_runner.py
        env:
          SESSION_ID: ${{ secrets.SESSION_ID }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          python motivation_runner.py
